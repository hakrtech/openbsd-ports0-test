$OpenBSD: patch-agent_component_c,v 1.2 2014/03/12 07:53:00 jasper Exp $

https://bugs.freedesktop.org/show_bug.cgi?id=76059
  warning: declaration of 'socket' shadows a global declaration

--- agent/component.c.orig	Tue Mar 11 19:39:42 2014
+++ agent/component.c	Tue Mar 11 19:40:28 2014
@@ -431,13 +431,13 @@ _find_socket_source (gconstpointer a, gconstpointer b)
 /* This takes ownership of the socket.
  * It creates and attaches a source to the component’s context. */
 void
-component_attach_socket (Component *component, NiceSocket *socket)
+component_attach_socket (Component *component, NiceSocket *sock)
 {
   GSList *l;
   SocketSource *socket_source;
 
   g_assert (component != NULL);
-  g_assert (socket != NULL);
+  g_assert (sock != NULL);
 
   g_assert (component->ctx != NULL);
 
@@ -454,13 +454,13 @@ component_attach_socket (Component *component, NiceSoc
    * or discovery failure, which are both unrecoverable states.
    *
    * An empty socket_sources corresponds to age 0. */
-  l = g_slist_find_custom (component->socket_sources, socket,
+  l = g_slist_find_custom (component->socket_sources, sock,
           _find_socket_source);
   if (l != NULL) {
     socket_source = l->data;
   } else {
     socket_source = g_slice_new0 (SocketSource);
-    socket_source->socket = socket;
+    socket_source->socket = sock;
     socket_source->component = component;
     component->socket_sources =
         g_slist_prepend (component->socket_sources, socket_source);
@@ -501,15 +501,15 @@ component_reattach_all_sockets (Component *component)
  * If the @socket doesn’t exist in this @component, do nothing.
  */
 void
-component_detach_socket (Component *component, NiceSocket *socket)
+component_detach_socket (Component *component, NiceSocket *sock)
 {
   GSList *l;
   SocketSource *socket_source;
 
-  nice_debug ("Detach socket %p.", socket);
+  nice_debug ("Detach socket %p.", sock);
 
   /* Find the SocketSource for the socket. */
-  l = g_slist_find_custom (component->socket_sources, socket,
+  l = g_slist_find_custom (component->socket_sources, sock,
           _find_socket_source);
   if (l == NULL)
     return;
