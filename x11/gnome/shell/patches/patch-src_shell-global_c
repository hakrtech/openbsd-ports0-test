$OpenBSD: patch-src_shell-global_c,v 1.8 2014/04/12 07:10:43 ajacoutot Exp $

https://bugzilla.gnome.org/show_bug.cgi?id=727763

--- src/shell-global.c.orig	Wed Mar 19 21:27:35 2014
+++ src/shell-global.c	Tue Apr  8 18:38:55 2014
@@ -1143,17 +1143,7 @@ shell_global_reexec_self (ShellGlobal *global)
       g_warning ("failed to get /proc/self/cmdline: %s", error->message);
       return;
     }
-#elif defined __OpenBSD__
-  int pid = getpid();
-  int mib[] = { CTL_KERN, KERN_PROC_ARGS, pid, KERN_PROC_ARGV };
-  if (sysctl(mib, G_N_ELEMENTS (mib), &buf, &len, NULL, 0) == -1) {
-    g_warning ("failed to get command line args: %d", errno);
-    return;
-  }
-#else
-  return;
-#endif
-  
+
   buf_end = buf+len;
   arr = g_ptr_array_new ();
   /* The cmdline file is NUL-separated */
@@ -1161,6 +1151,40 @@ shell_global_reexec_self (ShellGlobal *global)
     g_ptr_array_add (arr, buf_p);
 
   g_ptr_array_add (arr, NULL);
+#elif defined __OpenBSD__
+  gchar **args, **args_p;
+  pid_t pid = getpid();
+  gint mib[] = { CTL_KERN, KERN_PROC_ARGS, pid, KERN_PROC_ARGV };
+
+  args = NULL;
+  len = 128;
+
+  if (sysctl (mib, G_N_ELEMENTS (mib), NULL, &len, NULL, 0) == -1) {
+    g_warning ("sysctl failed to get data size: %d", errno);
+    return;
+  }
+
+  args = g_malloc0 (len + 1);
+  if (args == NULL) {
+    g_warning ("shell_global_reexec_self: cannot allocate memory");
+    return;
+  }
+
+  if (sysctl (mib, G_N_ELEMENTS (mib), args, &len, NULL, 0) == -1) {
+    g_warning ("failed to get command line args: %d", errno);
+    g_free (args);
+    return;
+  }
+
+  arr = g_ptr_array_new ();
+  for (args_p = args; *args_p; args_p++)
+    g_ptr_array_add (arr, g_strdup (*args_p));
+  g_ptr_array_add (arr, NULL);
+
+  g_free (args);
+#else
+  return;
+#endif
 
   /* Close all file descriptors other than stdin/stdout/stderr, otherwise
    * they will leak and stay open after the exec. In particular, this is
