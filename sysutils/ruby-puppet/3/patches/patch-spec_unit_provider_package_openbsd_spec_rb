$OpenBSD: patch-spec_unit_provider_package_openbsd_spec_rb,v 1.2 2013/08/06 18:21:27 jasper Exp $

From a5b8b96f703d932b90ce7461b18076bb32ee85b3 Mon Sep 17 00:00:00 2001
From: Jasper Lievisse Adriaanse <jasper@humppa.nl>
Date: Tue, 23 Jul 2013 16:55:55 +0200
Subject: Enhance OpenBSD pkg.conf handling

From ee14796e05bb05a6829644827e510b2b8e8076d4 Mon Sep 17 00:00:00 2001
From: Jasper Lievisse Adriaanse <jasper@humppa.nl>
Date: Thu, 1 Aug 2013 17:32:46 +0200
Subject: (22023) Implement :purgeable feature for OpenBSD package provider

--- spec/unit/provider/package/openbsd_spec.rb.orig	Tue Aug  6 20:19:42 2013
+++ spec/unit/provider/package/openbsd_spec.rb	Tue Aug  6 20:19:17 2013
@@ -184,7 +184,29 @@ describe provider_class do
       provider.install
     end
 
-    %w{ installpath installpath= }.each do |line|
+    it "should append installpath" do
+      urls = ["ftp://your.ftp.mirror/pub/OpenBSD/5.2/packages/amd64/",
+              "http://another.ftp.mirror/pub/OpenBSD/5.2/packages/amd64/"]
+      lines = ["installpath  = #{urls[0]}\n",
+               "installpath += #{urls[1]}\n"]
+
+      expect_read_from_pkgconf(lines)
+      expect_pkgadd_with_env_and_name(urls.join(":")) do
+        provider.install
+      end
+    end
+
+    it "should handle append on first installpath" do
+      url = "ftp://your.ftp.mirror/pub/OpenBSD/5.2/packages/amd64/"
+      lines = ["installpath += #{url}\n"]
+
+      expect_read_from_pkgconf(lines)
+      expect_pkgadd_with_env_and_name(url) do
+        provider.install
+      end
+    end
+
+    %w{ installpath installpath= installpath+=}.each do |line|
       it "should reject '#{line}'" do
         expect_read_from_pkgconf([line])
         expect {
@@ -224,6 +246,15 @@ describe provider_class do
       provider.resource[:name] = 'zsh'
       provider.expects(:pkginfo).with('zsh').returns('')
       provider.query.should be_nil
+    end
+  end
+  
+  context "#uninstall" do
+    describe 'when uninstalling' do
+      it 'should use erase to purge' do
+        provider.expects(:pkgdelete).with('-c', '-q', 'bash')
+        provider.purge
+      end
     end
   end
 end
