$OpenBSD: patch-lib_ansible_modules_extras_packaging_os_openbsd_pkg_py,v 1.5 2016/10/15 08:33:52 jasper Exp $

Hunks 3+4:
From 2001172027e339037adaa290e77a7700c818ad57 Mon Sep 17 00:00:00 2001
From: Patrik Lundin <patrik@sigterm.se>
Date: Wed, 12 Oct 2016 20:51:22 +0200
Subject: [PATCH 1/2] openbsd_pkg: Use correct part of name in match.

--- lib/ansible/modules/extras/packaging/os/openbsd_pkg.py.orig	Fri Oct 14 14:30:50 2016
+++ lib/ansible/modules/extras/packaging/os/openbsd_pkg.py	Fri Oct 14 14:30:40 2016
@@ -144,7 +144,7 @@ def package_present(name, installed_state, pkg_spec, m
     build = module.params['build']
 
     if module.check_mode:
-        install_cmd = 'pkg_add -Imn'
+        install_cmd = 'pkg_add -Imnz'
     else:
         if build is True:
             port_dir = "%s/%s" % (module.params['ports_dir'], get_package_source_path(name, pkg_spec, module))
@@ -159,7 +159,7 @@ def package_present(name, installed_state, pkg_spec, m
             else:
                 module.fail_json(msg="the port source directory %s does not exist" % (port_dir))
         else:
-            install_cmd = 'pkg_add -Im'
+            install_cmd = 'pkg_add -Imz'
 
     if installed_state is False:
 
@@ -189,11 +189,14 @@ def package_present(name, installed_state, pkg_spec, m
                 # "file:/local/package/directory/ is empty" message on stderr
                 # while still installing the package, so we need to look for
                 # for a message like "packagename-1.0: ok" just in case.
-                match = re.search("\W%s-[^:]+: ok\W" % name, stdout)
+                if pkg_spec['style'] == 'branch':
+                    match = re.search("\W%s-[^:]+: ok\W" % pkg_spec['pkgname'], stdout)
+                else:
+                    match = re.search("\W%s-[^:]+: ok\W" % name, stdout)
+
                 if match:
                     # It turns out we were able to install the package.
-                    module.debug("package_present(): we were able to install package")
-                    pass
+                    module.debug("package_present(): we were able to install the package")
                 else:
                     # We really did fail, fake the return code.
                     module.debug("package_present(): we really did fail")
@@ -349,6 +352,10 @@ def parse_package_name(name, pkg_spec, module):
             pkg_spec['style']             = 'stem'
         else:
             module.fail_json(msg="Unable to parse package name at else: " + name)
+
+        # Key names from description in pkg_add(1).
+        pkg_spec['pkgname'] = pkg_spec['stem'].split('%')[0]
+        pkg_spec['branch'] = pkg_spec['stem'].split('%')[1]
 
     # Sanity check that there are no trailing dashes in flavor.
     # Try to stop strange stuff early so we can be strict later.
